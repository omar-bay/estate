sample __manifest__.py
    https://github.com/odoo/odoo/blob/fc92728fb2aa306bf0e01a7f9ae1cfa3c1df0e10/addons/crm/__manifest__.py#L1-L67

to make it appear in apps, we appended to __manifest__.py
    'application': True

creating table estate_property

ORM layer makes us avoid writing SQL

we create python object, and ORM will translate them to tables

```
from odoo import models

class TestModel(models.Model):
    _name = "test.model"
```
ORM will generate database table names test_model
it reads the '.' as '_'

sample entity
````````````````````````````````````````````````````````````````````````````````````````````````````````````````
from odoo import fields, models

class RecurringPlan(models.Model):
    _name = "crm.recurring.plan"
    _description = "CRM Recurring revenue plans"
    _order = "sequence"

    name = fields.Char('Plan Name', required=True, translate=True)
    number_of_months = fields.Integer('# Months', required=True)
    active = fields.Boolean('Active', default=True)                                                              |
    sequence = fields.Integer('Sequence', default=10)                                                            |
                                                                                                                 |
    _sql_constraints = [                                                                                         |
        ('check_number_of_months', 'CHECK(number_of_months >= 0)', 'The number of month can\'t be negative.'),   |
    ]                                                                                                            |
``````````````````````````````````````````````````````````````````````````````````````````````````````````````````
this is going in the module_name/models/crm_recurring_plan.py file
then it's imported in the module_name/models/__init__.py file
and the folder models is imported in module_name/__init__.py

don't forget to upgrade your module when editing in the table.

test table:
    psql -d demo15
    SELECT COUNT(*) FROM estate_property;

a file importing data is located in the module_name/data folder
when the data is related to security, it's located in the module_name/security folder
when data is related to view and actions, it's located in the module_name/views folder

all of these files should be declared in 'data' list in __manifest__.py file

now we do some UI
link a menu to estate.property table so we can create new records.

when you do a view, add it to __manifest__.py

the menus inside the module are called action menus

the selling price should be read-only and the number of bedrooms and the availability date should have default values.

the selection values are in small case

next step is to define our own views

make the tree in the main views. the estate_property_views.xml

the <group/> seems to put wrap data with value
the <field name="attribute"/> gets the data value

define a link to res.partner
partner_id = fields.Many2one("res.partner", string="Partner")
then we can
print(my_test_object.partner_id.name)

add security to each model

the action attribute in menuitem looks like model name but with _action

the salesperson must be an employee (odoo user)
res.partner: a partner is a physical or legal entity. It can be a company, an individual or even a contact address.
res.users: the users of the system. Users can be ‘internal’, i.e. they have access to the Odoo backend. Or they can be ‘portal’, i.e. they cannot access the backend, only the frontend

user_id = fields.Many2one('res.users', string='Salesperson', index=True, tracking=True, default=lambda self: self.env.user)
user_email = fields.Char('User Email', related='user_id.email', readonly=True)